{"version":3,"sources":["components/ItemRow/ItemRow.module.css","services/api-service.js","utils/validators.js","components/AddItem/AddItem.js","components/ItemRow/ItemRow.js","components/Inventory/Inventory.js","App.js","index.js","components/Inventory/Inventory.module.css"],"names":["module","exports","deepCopy","object","JSON","parse","stringify","mockItems","id","name","price","quantity","nextId","createItem","data","a","newItem","push","itemId","targetItem","find","item","console","error","splice","indexOf","validateName","validatePrice","test","validateQuantity","AddItem","doCreateItem","useState","formData","setFormData","formError","setFormError","nameInvalid","setNameInvalid","priceInvalid","setPriceInvalid","quantityInvalid","setQuantityInvalid","useEffect","nameError","priceError","quantityError","className","type","placeholder","value","onChange","e","target","required","style","width","onClick","preventDefault","ItemRow","props","actions","doDeleteItem","doUpdateItem","activeAction","setActiveAction","DELETE","EDIT","backgroundColor","handleUpdate","data-testid","styles","itemRow","Inventory","items","setItems","prevItems","filter","deleteItem","map","updateItem","retrieveItems","then","response","catch","err","tableWrapper","table","col1","col2","col3","col4","length","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fd661291.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemRow\":\"ItemRow_itemRow__3ZpUV\"};","/*\n * This is a mock CRUD api, to be replaced by real calls\n *\n * We declare a schema to be used for validation and some\n * dummy data.\n *\n */\n\n// This is to avoid entangling the mock objects with the React state\nfunction deepCopy(object) {\n  return JSON.parse(JSON.stringify(object));\n}\n\nconst itemSchema = {\n  type: \"object\",\n  required: [\"name\", \"price\", \"quantity\"],\n  properties: {\n    name: {type: \"string\"},\n    price: {type: \"number\"},\n    quantity: {type: \"integer\"},\n  }\n}\n\nconst mockItems = [\n  { id: 1, name: \"pen\", price: 33.25, quantity: 50 },\n  { id: 2, name: \"pencil\", price: 5.00, quantity: 200 },\n  { id: 3, name: \"ream of paper\", price: 25.00, quantity: 20 },\n]\n\nlet nextId = 4;\n\nasync function createItem(data) {\n  const newItem = {...data, id: nextId}\n  nextId++;\n\n  mockItems.push(newItem);\n\n  return deepCopy(newItem);\n}\n\nasync function retrieveItems() {\n  return deepCopy(mockItems);\n}\n\nasync function updateItem(itemId, data) {\n  let targetItem = mockItems.find((item) => item.id === itemId); \n\n  if (!targetItem) {\n    console.error(`Item of id (${itemId}) not found.`);\n    return false;\n  }\n\n  targetItem = {...targetItem, ...data};\n\n  return deepCopy(targetItem);\n}\n\nasync function deleteItem(itemId) {\n  mockItems.splice(mockItems.indexOf(item => item.id === itemId), 1);\n\n  return true;\n}\n\nexport {\n  createItem,\n  retrieveItems,\n  updateItem,\n  deleteItem,\n}\n","function validateName(name) {\n  const error = name ? '' : 'Name required';\n  return error;\n}\n\nfunction validatePrice(price) {\n  const regexA = /^\\d*\\.?\\d+/;\n  const regexB = /^\\d+\\.?\\d*/;\n  const error = regexA.test(price) || regexB.test(price) ? '' : 'Price is not valid';\n  return error;\n}\n\nfunction validateQuantity(price) {\n  const regex = /^\\d+/;\n  const error = regex.test(price) ? '' : 'Quantity is not valid';\n  return error;\n}\n\nexport {\n  validateName,\n  validatePrice,\n  validateQuantity,\n};\n","import { useState, useEffect } from 'react';\nimport { validateName, validatePrice, validateQuantity } from '../../utils/validators';\n\n\nexport default function AddItem({ doCreateItem }) {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    price: \"\",\n  });\n\n  const [formError, setFormError] = useState('');\n  const [nameInvalid, setNameInvalid] = useState(false);\n  const [priceInvalid, setPriceInvalid] = useState(false);\n  const [quantityInvalid, setQuantityInvalid] = useState(false);\n\n  // Validate\n  useEffect(() => {\n    const nameError = validateName(formData.name);\n    const priceError = validatePrice(formData.price);\n    const quantityError = validateQuantity(formData.quantity);\n\n    nameError ? setNameInvalid(true) : setNameInvalid(false);\n    priceError ? setPriceInvalid(true) : setPriceInvalid(false);\n    quantityError ? setQuantityInvalid(true) : setQuantityInvalid(false);\n  }, [formData]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const nameError = validateName(formData.name);\n    const priceError = validatePrice(formData.price);\n    const quantityError = validateQuantity(formData.quantity);\n\n    if (nameError || priceError || quantityError) {\n      setFormError(nameError || priceError || quantityError);\n      return;\n    }\n\n    setFormError('');\n    doCreateItem(formData);\n  }\n\n  return (\n    <tr>\n      <td>\n        <input\n          className={nameInvalid ? \"invalid-input\" : null}\n          type=\"text\"\n          placeholder=\"name\"\n          value={formData.name}\n          onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n          required\n        />\n      </td>\n      <td>\n        <input style={{width: \"90%\"}}\n          className={priceInvalid ? \"invalid-input\" : null}\n          type=\"number\"\n          placeholder=\"price\"\n          value={formData.price}\n          onChange={(e) => setFormData({ ...formData, price: e.target.value })}\n          required\n        />\n      </td>\n      <td>\n        <input style={{width: \"90%\"}}\n          className={quantityInvalid ? \"invalid-input\" : null}\n          type=\"number\"\n          placeholder=\"quantity\"\n          value={formData.quantity}\n          onChange={(e) => setFormData({ ...formData, quantity: e.target.value })}\n          required\n        />\n      </td>\n      <td>\n        <button onClick={handleSubmit}>Add Item</button>\n        <em><small> {formError}</small></em>\n      </td>\n    </tr>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { validateName, validatePrice, validateQuantity } from '../../utils/validators';\nimport styles from './ItemRow.module.css';\n\n\nexport default function ItemRow(props) {\n  const { item, doDeleteItem, doUpdateItem } = props;\n  const [activeAction, setActiveAction] = useState(null);\n  const [formData, setFormData] = useState({\n    name: item.name,\n    price: item.price,\n    quantity: item.quantity,\n  });\n  const [formError, setFormError] = useState('');\n  const [nameInvalid, setNameInvalid] = useState(false);\n  const [priceInvalid, setPriceInvalid] = useState(false);\n  const [quantityInvalid, setQuantityInvalid] = useState(false);\n\n  const DELETE = 'DELETE';\n  const EDIT = 'EDIT';\n\n\n  // Validate whenever form data changes\n  useEffect(() => {\n    const nameError = validateName(formData.name);\n    const priceError = validatePrice(formData.price);\n    const quantityError = validateQuantity(formData.quantity);\n\n    nameError ? setNameInvalid(true) : setNameInvalid(false);\n    priceError ? setPriceInvalid(true) : setPriceInvalid(false);\n    quantityError ? setQuantityInvalid(true) : setQuantityInvalid(false);\n  }, [formData]);\n\n  function handleUpdate() {\n    const nameError = validateName(formData.name);\n    const priceError = validatePrice(formData.price);\n    const quantityError = validateQuantity(formData.quantity);\n\n    if (nameError || priceError || quantityError) {\n      setFormError(nameError || priceError || quantityError);\n      return;\n    }\n\n    setFormError('');\n    doUpdateItem(item.id, formData);\n    setActiveAction(null);\n  }\n\n  // Set up the 'actions' cell depending on current action state\n  let actions;\n  switch (activeAction) {\n    case DELETE:\n      actions =\n        <>\n          <button style={{backgroundColor: \"red\" }}\n            onClick={() => { doDeleteItem(item.id); setActiveAction(null); }}\n          >\n            Confirm DELETE\n          </button>\n          <button onClick={() => setActiveAction(null)}>cancel</button>\n        </>;\n      break;\n    case EDIT:\n      actions =\n        <>\n          <button onClick={() => { handleUpdate(item.id, formData); }} >\n            Save Data\n          </button>\n          <button onClick={() => setActiveAction(null)}>Cancel</button>\n        </>;\n      break;\n    default:\n      actions =\n        <div>\n          <button data-testid=\"delete-button\" onClick={() => setActiveAction(DELETE)}>Delete</button>\n          <button onClick={() => setActiveAction(EDIT)}>Edit</button>\n        </div>;\n  }\n\n\n  // If we are in edit mode, present a form\n  if (activeAction === EDIT) {\n    return (\n      <tr className={styles.itemRow}>\n        <td>\n          <input style={{width: \"90%\"}}\n            className={nameInvalid ? \"invalid-input\" : null}\n            type=\"text\"\n            placeholder=\"name\"\n            value={formData.name}\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\n            required\n          />\n        </td>\n        <td>\n          <input style={{width: \"90%\"}}\n            className={priceInvalid ? \"invalid-input\" : null}\n            type=\"number\"\n            placeholder=\"price\"\n            value={formData.price}\n            onChange={(e) => setFormData({ ...formData, price: e.target.value })}\n            required\n          />\n        </td>\n        <td>\n          <input style={{width: \"90%\"}}\n            className={quantityInvalid ? \"invalid-input\" : null}\n            type=\"number\"\n            placeholder=\"quantity\"\n            value={formData.quantity}\n            onChange={(e) => setFormData({ ...formData, quantity: e.target.value })}\n            required\n          />\n        </td>\n        <td>\n          {actions}\n        </td>\n      </tr>\n    );\n  }\n\n  // If we are not in edit mode present the data\n  return (\n    <tr className={styles.itemRow}>\n      <td data-testid=\"name-cell\">\n        {item.name}\n      </td>\n      <td>\n        {item.price}\n      </td>\n      <td>\n        {item.quantity}\n      </td>\n      <td>\n        {actions}\n      </td>\n    </tr>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport {\n  createItem,\n  retrieveItems,\n  updateItem,\n  deleteItem\n} from '../../services/api-service';\nimport AddItem from '../AddItem/AddItem';\nimport ItemRow from '../ItemRow/ItemRow';\nimport styles from './Inventory.module.css';\n\nexport function Inventory() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    // TODO catch and schedule a retry\n    updateItems();\n  }, []);\n\n  function updateItems() {\n    retrieveItems()\n      .then(response => setItems(response))\n      .catch(err => console.error(err));\n  }\n\n  async function doCreateItem(data) {\n    const newItem = await createItem(data);\n    setItems((prevItems) => [...prevItems, newItem]);\n  }\n\n  function doDeleteItem(itemId) {\n    setItems((prevItems) => prevItems.filter(item => item.id !== itemId));\n    deleteItem(itemId);\n  }\n\n  function doUpdateItem(itemId, data) {\n    setItems((prevItems) => prevItems.map((item) => {\n      if (item.id === itemId) {\n        return ({ ...item, ...data });\n      } else {\n        return item;\n      }\n    }));\n\n    // TODO maybe check return and use that?\n    updateItem(itemId, data);\n  }\n\n  return (\n    <div className={styles.tableWrapper}>\n      <table className={styles.table}>\n        <thead>\n          <tr>\n            <td className={styles.col1}>Name</td>\n            <td className={styles.col2}>Price</td>\n            <td className={styles.col3}>Quantity</td>\n            <td className={styles.col4}>Actions</td>\n          </tr>\n        </thead>\n        <tbody>\n          <AddItem doCreateItem={doCreateItem} />\n          {items.length ? items.map((item) => <ItemRow\n            key={item.id}\n            item={item}\n            doCreateItem={doCreateItem}\n            doDeleteItem={doDeleteItem}\n            doUpdateItem={doUpdateItem} />\n          )\n          :\n          <tr><td>No items</td></tr>}\n        </tbody>\n      </table>\n\n    </div>\n  );\n}\n","import './App.css';\nimport { Inventory } from './components/Inventory/Inventory';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Inventory Management</h1>\n      <Inventory />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Inventory_tableWrapper__1EwJo\",\"table\":\"Inventory_table__4paOY\",\"col1\":\"Inventory_col1__8wYXG\",\"col2\":\"Inventory_col2__1PGRV\",\"col3\":\"Inventory_col3__1jaJr\",\"col4\":\"Inventory_col4__3Cxil\"};"],"sourceRoot":""}